name: CD / Deploy / Release
concurrency: cd-build

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  
jobs:
  get-microservices:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.microservices-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - id: microservices-matrix
        run: |
          matrix=$(git diff --name-only ${{github.event.before}} ${{github.event.after}} | grep "^ms-" | sed "s/\(^ms-[^\/]*\).*/\1/" | uniq | xargs -n 1 | jq -R . | jq -sc .)
          echo $matrix
          echo "::set-output name=matrix::$matrix"
          
          
  build-microservices:
    runs-on: ubuntu-latest
    needs: get-microservices
    strategy:
      fail-fast: false
      matrix: 
        microservices: ${{fromJson(needs.get-microservices.outputs.matrix)}} # np, ca n'est pas une erreur
    steps:
      - uses: actions/checkout@v3
      
      - name: microservice name
        run: echo ${{matrix.microservices}}
        
      - name: microservice version
        run: |
         version=$(cat ${{matrix.microservices}}/package.json | jq -r .version)
         echo "MS_VERSION=$(cat ${{matrix.microservices}}/package.json | jq -r .version)" >> $GITHUB_ENV
     
      - name: echo
        run: echo ${{env.MS_VERSION}}

      - name: microservice build
        run: docker build -t ${{matrix.microservices}}/${{env.MS_VERSION}} --build-arg MS_NAME=${{matrix.microservices}} -f Dockerfile .
